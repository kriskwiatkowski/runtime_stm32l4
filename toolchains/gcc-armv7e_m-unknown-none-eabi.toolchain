set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR armv7e-m)

set(pfx arm-none-eabi)
set(CMAKE_C_COMPILER ${pfx}-gcc)

# Set arch for source compilation
set(C_FLAGS "-march=${CMAKE_SYSTEM_PROCESSOR} -mfloat-abi=soft")
# Use Thumb2 also and possibility to switch between Thumb2 and ARM (maybe not needed here)
set(C_FLAGS "${C_FLAGS} -mthumb -specs=nosys.specs -specs=nano.specs -lnosys")
# Generate a separate ELF section for each function in the source file
#set(C_FLAGS "${C_FLAGS} -ffunction-sections -fdata-sections")
set(CMAKE_C_FLAGS_INIT ${C_FLAGS} CACHE INTERNAL "" FORCE)

set(CMAKE_TOOLCHAIN_CMD_STRIP ${pfx}-strip)
set(OBJCOPY ${pfx}-objcopy CACHE INTERNAL "")
set(OBJDUMP ${pfx}-objdump CACHE INTERNAL "")
set(NEEDS_OBJCOPY 1)
set(NEEDS_OBJDUMP 1)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_C_COMPILER_WORKS 1)
